CREATE TABLE IF NOT EXISTS users (
            user_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
            email VARCHAR(255) NOT NULL,
            name VARCHAR(40) NOT NULL,
            birthday DATE NOT NULL,
            login VARCHAR(40) NOT NULL
          );

CREATE TABLE IF NOT EXISTS event_type (
            id INT PRIMARY KEY,
            name VARCHAR(40) NOT NULL
            );
CREATE TABLE IF NOT EXISTS operations (
            id INT PRIMARY KEY,
            name VARCHAR(40) NOT NULL
            );

CREATE TABLE IF NOT EXISTS MPA (
            id INT PRIMARY KEY,
            name VARCHAR(40) NOT NULL
            );

 CREATE TABLE IF NOT EXISTS films (
            film_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
            title VARCHAR(255) NOT NULL,
            description VARCHAR(255) NOT NULL,
            release_date DATE NOT NULL,
            duration INTEGER NOT NULL,
            MPA_id INTEGER REFERENCES mpa ON DELETE SET NULL
          );

CREATE TABLE IF NOT EXISTS reviews (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            user_id BIGINT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
            film_id BIGINT NOT NULL REFERENCES films(film_id) ON DELETE CASCADE,
            positive boolean NOT NULL,
            content VARCHAR NOT NULL,
            CONSTRAINT content_length_check CHECK (LENGTH(content) <= 200),
            CONSTRAINT unique_review_per_user_and_film UNIQUE (user_id, film_id)
);

CREATE INDEX IF NOT EXISTS idx_reviews_film_id ON reviews(film_id);

CREATE TABLE IF NOT EXISTS review_likes (
                                     review_id BIGINT REFERENCES reviews(id) ON DELETE CASCADE,
                                     user_id BIGINT REFERENCES users ON DELETE CASCADE,
                                     CONSTRAINT one_user_one_like UNIQUE (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS review_dislikes (
                                            review_id BIGINT REFERENCES reviews(id) ON DELETE CASCADE,
                                            user_id BIGINT REFERENCES users ON DELETE CASCADE,
                                            CONSTRAINT one_user_one_dislike UNIQUE (review_id, user_id)
);

CREATE INDEX IF NOT EXISTS idx_review_likes_review_id ON review_likes(review_id);
CREATE INDEX IF NOT EXISTS idx_review_dislikes_review_id ON review_dislikes(review_id);

CREATE TABLE IF NOT EXISTS genre (
            id INT PRIMARY KEY,
            name VARCHAR(40) NOT NULL
            );


CREATE TABLE IF NOT EXISTS film_genre (
            id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
            film_id INTEGER REFERENCES films ON DELETE CASCADE,
            genre_id INTEGER REFERENCES genre ON DELETE CASCADE
            );

CREATE TABLE IF NOT EXISTS likes (
			id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
            film_id INTEGER REFERENCES films ON DELETE CASCADE,
            user_id INTEGER REFERENCES users ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friends (
            id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
            user_id INTEGER REFERENCES users ON DELETE CASCADE,
            friend_id INTEGER REFERENCES users ON DELETE CASCADE,
            friend_confirm BOOLEAN DEFAULT FALSE
            );

CREATE TABLE IF NOT EXISTS feeds (
            event_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
            user_id INTEGER REFERENCES users ON DELETE CASCADE,
            timestamp BIGINT NOT NULL,
            entity_id INTEGER NOT NULL,
            event_type_id INTEGER REFERENCES event_type ON DELETE CASCADE,
            event_operation_id INTEGER REFERENCES operations ON DELETE CASCADE
            );